# -*- coding: utf-8 -*-
"""Assignment4(1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lDD4OsyFnToWaDcVGFL_K6QzkefUvqd4
"""

import pandas as pandas

import pandas as pd
data_value = pd.read_csv("data.csv")
data_value.describe()

null_values = data_value.isnull().sum()
print(null_values)

data_value.fillna(data_value.mean(), inplace=True)
print(data_value)

data_value = data_value[["Duration", "Pulse" ]]

agg_dict = {"Duration": ["max", "min", "count", "mean"],
            "Pulse": ["max", "min", "count", "mean"]}
agg_data_value = data_value.agg(agg_dict)
print(agg_data_value)

data_value = pd.read_csv("data.csv")
Calories_filter = (data_value["Calories"] >= 500) & (data_value["Calories"] <= 1000)
filtered_data_value = data_value[Calories_filter]
print(filtered_data_value)

data_value = pd.read_csv("data.csv")
Calories_filter = (data_value["Calories"] > 500) & (data_value["Pulse"] < 100)
filtered_data_value = data_value[Calories_filter]
print(filtered_data_value)

df_modified = data_value.drop(columns=["Maxpulse"])
print(df_modified)

data_value['Calories'] = data_value['Calories'].fillna(0).astype(int)
print(data_value)

import matplotlib.pyplot as plt

data_value.plot(kind='scatter', x='Duration', y='Calories', figsize=(6,3))
plt.show()



# -*- coding: utf-8 -*-
"""Assignment4(2).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/184jH8HbA6n_kQto_K0OUICFz_Uamv0gO
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import sklearn as sk

dataset = pd.read_csv("Salary_Data.csv")
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, 1]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=1/3, random_state=0)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)

from sklearn.metrics import mean_squared_error
meansquareerror = mean_squared_error(y_true=y_test,y_pred=y_pred)
print("Mean Square Error:",meansquareerror)

viz_train = plt
viz_train.scatter(X_train, y_train, color='green')
viz_train.plot(X_train, regressor.predict(X_train), color='black')
viz_train.title('Training set')
viz_train.xlabel('Years Experience')
viz_train.ylabel('Salary')
viz_train.show()

viz_test = plt
viz_test.scatter(X_test, y_test, color='green')
viz_test.plot(X_train, regressor.predict(X_train), color='black')
viz_test.title('Test set')
viz_test.xlabel('Years Experience')
viz_test.ylabel('Salary')
viz_test.show()
